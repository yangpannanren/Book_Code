%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 功能说明：用蒙特卡洛方法计算圆周率π
% Fig.4-8
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Buffon_Needle_Experiment
% 做500次试验
N=500;
% 每次投1000枚针
needles=1000;
% 针的长度
length=0.6;
% 将次试验的保存在该数组里面
PAI=zeros(1,N);
% 开始试验
for k=1:N
    % 调用子函数
    PAI(k)=buffon(length,needles);
end
% 求π的均值
PAI_ave=mean(PAI);
% 画图显示
figure
hold on;
box on;
plot(PAI);
% 画出平均值
line([0,N],[PAI_ave,PAI_ave],'LineWidth',5,'Color','r');
xlabel('k');
ylabel('π的估计值');
legend('估计值','估计的平均值');
title('蒲丰针模拟结果');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 函数功能:一次试验，得到的π的估计值
function pai=buffon(length,N)
frq=0; %与平行线相交的针的频数
% 现在开始模拟投针的过程
for k=1:N
    % 随机投一枚针，得到针的中心点与最近的平行线间的距离
    % 该距离是一个在(0，0.5)均匀分布的数
    d=unifrnd(0,0.5);
    % 同样，针与平行线的夹角不管是否相交，角度也是随机的
    % 该角度在(0，π)均匀分布
    cita=unifrnd(0,pi);
    % if条件判断部分，请参考书中的公式
    if (d <= (length*sin(cita)/2) )
        frq=frq+1; %相交则加1
    end
end
% 计算针与平行线相交的频率,该频率即作为概率
p=frq/N;
% 最终估计的π的值
pai=2*length/p;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%