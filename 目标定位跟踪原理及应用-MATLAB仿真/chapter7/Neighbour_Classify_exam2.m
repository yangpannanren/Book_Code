%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 程序说明：近邻法分类程序
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Neighbour_Classify_exam2
%  初始化数据
Type=3;  % 假设已知三类目标
% 随机产生M个样本点
M=15;
% 场地空间的长和宽
Width=4;
Length=4;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 样本初始化、并模拟一组样本空间
for i=1:Type
    x0=10*cos(pi*2*i/3);
    y0=10*sin(pi*2*i/3);
    XX{i}=[x0,y0]'; % 已知类别的样本集合，类中心
    for j=1:M
        % 模拟真实样本的空间，在类空间的位置
        X{i}(:,j)=[x0+Width*randn;y0+Length*randn];
    end
end
% 现在假设上述样本点没有正确归类，用集合Xun装载上面所有样本点
Xun=[X{1},X{2},X{3}]; % 未知样本集合
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 画图显示样本在空间上的分布， 真实的样本集合图
figure
hold on;box on;
h1=plot(X{1}(1,:),X{1}(2,:),'k^','MarkerFace','g');
h2=plot(X{2}(1,:),X{2}(2,:),'kd','MarkerFace','c');
h3=plot(X{3}(1,:),X{3}(2,:),'ko','MarkerFace','b');
xlabel('X/m');ylabel('Y/m');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 对未知的样本归类，采用近邻分类算法
ALL=M*Type; % 剩余未知样本点个数
% 从已知样本点出发，找到最近的未知样本点
while (ALL>0)
    % 近邻法跟开始分类的顺序有关，顺序不一样，分类的结果也不一样
    d=1e5; % 为了要找到最近的样本，假定初始距离无穷大
    for i=1:Type
        % 去寻找离第i类距离最近的样本
        [~,col]=size(XX{i}); % 得到第i类已知类别的样本中的样本数
        for j=1:col
            % 找到离已知样本点最近的点
            for k=1:ALL
                dist=sqrt( (Xun(1,k)-XX{i}(1,j))^2+(Xun(2,k)-XX{i}(2,j))^2 );
                if dist<d
                    d=dist;
                    % 最近的已知-未知样本序列对
                    label.class=i; % 存放已知类别的样本的标号
                    label.unclass=k; % 存放未知类别的样本的标号
                    X0=[Xun(1,k),XX{i}(1,j)];
                    Y0=[Xun(2,k),XX{i}(2,j)];
                end
            end
        end
    end
    % 将距离近的点归并到第label.class类
    XX{label.class}=[XX{label.class},Xun(:,label.unclass)];
    line(X0,Y0);  % 与最近的样本同类，两者之间连线
    pause(0.1);    % 设置停止时间可以在图形界面上看分类过程
    % 同时将Xun的第label个样本删除
    Xun(:,label.unclass)=[];
    % 继续遍历其他类
    ALL=ALL-1;
    pause(0.1);
end
h4=plot(XX{1}(1,1),XX{1}(2,1),'ks','MarkerFace','r');  % 第一类中心
h4=plot(XX{2}(1,1),XX{2}(2,1),'ks','MarkerFace','r');  % 第二类中心
h4=plot(XX{3}(1,1),XX{3}(2,1),'ks','MarkerFace','r');  % 第三类中心
legend([h1,h2,h3,h4],'第一类','第二类','第三类','类中心');
title('近邻法分类结果')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 统计分类的错误率
counter=0;
for i=1:Type
    for j=1:M
        [~,col]=size(XX{i});
        for k=1:col
            % 比较分类器分类的样本与真实样本类别之间的差别
            if X{i}(:,j)==XX{i}(:,k)
                counter=counter+1;
            end
        end
    end
end
rate=counter/(3*M);
disp(['总样本数',num2str(3*M)])
disp(['归类正确的样本数',num2str(counter)])
disp(['归类错误的样本数',num2str(3*M-counter)])
disp(['分类正确率',num2str(rate)]);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%